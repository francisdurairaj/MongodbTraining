In MongoDB, map-reduce is a data processing programming model that helps to perform operations on large data sets and produce aggregated results. MongoDB provides the mapReduce() function to perform the map-reduce operations. This function has two main functions, i.e., map function and reduce function. The map function is used to group all the data based on the key-value and the reduce function is used to perform operations on the mapped data. So, the data is independently mapped and reduced in different spaces and then combined together in the function and the result will save to the specified new collection. This mapReduce() function generally operated on large data sets only. Using Map Reduce you can perform aggregation operations such as max, avg on the data using some key and it is similar to groupBy in SQL. 
map() function: It uses emit() function in which it takes two parameters key and value key. Here the key is on which we make groups like groups by in MySQL. Example like group by ages or names and the second parameter is on which aggregation is performed like avg(), sum() is calculated on.
reduce() function: It is the step in which we perform our aggregate function  like avg(), sum().
query: Here we will pass the query to filter the resultset.
output: In this, we will specify the collection name where the result will be stored.

-----------------

db.Employee.find()

var map=function(){ emit(this.city,this.salary)};

var reduce=function(age,salary){ return Array.sum(salary);};

db.Employee.mapReduce(map,reduce,{out :"resultCollection1"});

db.resultCollection1.find()








